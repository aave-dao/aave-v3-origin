Index: src/contracts/rewards/interfaces/IRewardsDistributor.sol
===================================================================
--- src/contracts/rewards/interfaces/IRewardsDistributor.sol
+++ src/contracts/rewards/interfaces/IRewardsDistributor.sol
@@ -49,10 +49,9 @@
      * @dev Sets the end date for the distribution
      * @param asset The asset to incentivize
      * @param reward The reward token that incentives the asset
      * @param newDistributionEnd The end date of the incentivization, in unix time format
-     *
-     */
+     **/
     function setDistributionEnd(
         address asset,
         address reward,
         uint32 newDistributionEnd
@@ -74,10 +73,9 @@
      * @dev Gets the end date for the distribution
      * @param asset The incentivized asset
      * @param reward The reward token of the incentivized asset
      * @return The timestamp with the end of the distribution, in unix time format
-     *
-     */
+     **/
     function getDistributionEnd(
         address asset,
         address reward
     ) external view returns (uint256);
@@ -87,10 +85,9 @@
      * @param user Address of the user
      * @param asset The incentivized asset
      * @param reward The reward token of the incentivized asset
      * @return The current user asset index, not including new distributions
-     *
-     */
+     **/
     function getUserAssetIndex(
         address user,
         address asset,
         address reward
@@ -103,10 +100,9 @@
      * @return The index of the asset distribution
      * @return The emission per second of the reward distribution
      * @return The timestamp of the last update of the index
      * @return The timestamp of the distribution end
-     *
-     */
+     **/
     function getRewardsData(
         address asset,
         address reward
     ) external view returns (uint256, uint256, uint256, uint256);
@@ -116,10 +112,9 @@
      * @param asset The incentivized asset
      * @param reward The reward token of the incentivized asset
      * @return The old index of the asset distribution
      * @return The new index of the asset distribution
-     *
-     */
+     **/
     function getAssetIndex(
         address asset,
         address reward
     ) external view returns (uint256, uint256);
@@ -127,28 +122,25 @@
     /**
      * @dev Returns the list of available reward token addresses of an incentivized asset
      * @param asset The incentivized asset
      * @return List of rewards addresses of the input asset
-     *
-     */
+     **/
     function getRewardsByAsset(
         address asset
     ) external view returns (address[] memory);
 
     /**
      * @dev Returns the list of available reward addresses
      * @return List of rewards supported in this contract
-     *
-     */
+     **/
     function getRewardsList() external view returns (address[] memory);
 
     /**
      * @dev Returns the accrued rewards balance of a user, not including virtually accrued rewards since last distribution.
      * @param user The address of the user
      * @param reward The address of the reward token
      * @return Unclaimed rewards, not including new distributions
-     *
-     */
+     **/
     function getUserAccruedRewards(
         address user,
         address reward
     ) external view returns (uint256);
@@ -158,10 +150,9 @@
      * @param assets List of incentivized assets to check eligible distributions
      * @param user The address of the user
      * @param reward The address of the reward token
      * @return The rewards amount
-     *
-     */
+     **/
     function getUserRewards(
         address[] calldata assets,
         address user,
         address reward
@@ -172,10 +163,9 @@
      * @param assets List of incentivized assets to check eligible distributions
      * @param user The address of the user
      * @return The list of reward addresses
      * @return The list of unclaimed amount of rewards
-     *
-     */
+     **/
     function getAllUserRewards(
         address[] calldata assets,
         address user
     ) external view returns (address[] memory, uint256[] memory);
