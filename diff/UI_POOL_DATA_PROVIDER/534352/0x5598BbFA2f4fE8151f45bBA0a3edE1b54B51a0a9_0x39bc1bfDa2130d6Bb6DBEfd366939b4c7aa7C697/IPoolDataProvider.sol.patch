Index: src/contracts/interfaces/IPoolDataProvider.sol
===================================================================
--- src/contracts/interfaces/IPoolDataProvider.sol
+++ src/contracts/interfaces/IPoolDataProvider.sol
@@ -1,8 +1,9 @@
 // SPDX-License-Identifier: MIT
 pragma solidity ^0.8.0;
 
 import {IPoolAddressesProvider} from "./IPoolAddressesProvider.sol";
+import {IPool} from "./IPool.sol";
 
 /**
  * @title IPoolDataProvider
  * @author Aave
@@ -23,8 +24,14 @@
         view
         returns (IPoolAddressesProvider);
 
     /**
+     * @notice Returns the address for the Pool contract.
+     * @return The address for the Pool contract
+     */
+    function POOL() external view returns (IPool);
+
+    /**
      * @notice Returns the list of the existing reserves in the pool.
      * @dev Handling MKR and ETH in a different way since they do not have standard `symbol` functions.
      * @return The list of reserves, pairs of symbols and addresses
      */
@@ -104,9 +111,9 @@
 
     /**
      * @notice Returns the unbacked mint cap of the reserve
      * @param asset The address of the underlying asset of the reserve
-     * @return The unbacked mint cap of the reserve
+     * @return 0, DEPRECATED in v3.4.0
      */
     function getUnbackedMintCap(address asset) external view returns (uint256);
 
     /**
@@ -243,9 +250,9 @@
 
     /**
      * @notice Returns whether virtual accounting is enabled/not for a reserve
      * @param asset The address of the underlying asset of the reserve
-     * @return True if active, false otherwise
+     * @return True, DEPRECATED in v3.4.0 as all reserves have virtual accounting set as active
      */
     function getIsVirtualAccActive(address asset) external view returns (bool);
 
     /**
@@ -255,5 +262,12 @@
      */
     function getVirtualUnderlyingBalance(
         address asset
     ) external view returns (uint256);
+
+    /**
+     * @notice Returns the deficit of the reserve
+     * @param asset The address of the underlying asset of the reserve
+     * @return The reserve deficit
+     */
+    function getReserveDeficit(address asset) external view returns (uint256);
 }
